name: PythonCheck

on:
  push:
  workflow_dispatch:
  tags:
    - v*

jobs:
  run_test:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04']
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libs
        run: sudo apt-get install ca-certificates
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Run Testing
        run: PYTHONPATH=./ poetry run pytest -v ./

  run_pylint:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04']
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libs
        run: sudo apt-get install ca-certificates
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Run Pylint
        run: poetry run pylint -v ./gearkits/

  run_mypy:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04']
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libs
        run: sudo apt-get install ca-certificates
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Run Pylint
        run: poetry run mypy ./gearkits

  run_build:
    needs: ['run_test', 'run_pylint', 'run_mypy']
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04']
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libs
        run: sudo apt-get install ca-certificates
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Run poetry build
        run: poetry build

  run_build:
    needs: ['run_build']
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: ['ubuntu-20.04']
        python-version: ['3.9']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libs
        run: sudo apt-get install ca-certificates
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Run poetry build
        run: poetry build
      - name: Setup Pypi token
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Publish
        run: poetry publish
